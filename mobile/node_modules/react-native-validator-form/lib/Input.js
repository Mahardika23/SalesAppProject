Object.defineProperty(exports,"__esModule",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();
var _react=require('react');var _react2=_interopRequireDefault(_react);
var _propTypes=require('prop-types');var _propTypes2=_interopRequireDefault(_propTypes);

var _reactLifecyclesCompat=require('react-lifecycles-compat');
var _Form=require('./Form');var _Form2=_interopRequireDefault(_Form);
var _utils=require('./utils');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var

Input=function(_React$Component){_inherits(Input,_React$Component);function Input(){var _ref;var _temp,_this,_ret;_classCallCheck(this,Input);for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}return _ret=(_temp=(_this=_possibleConstructorReturn(this,(_ref=Input.__proto__||Object.getPrototypeOf(Input)).call.apply(_ref,[this].concat(args))),_this),_this.




















state={
isValid:true,
value:_this.props.value,
errorMessages:_this.props.errorMessages,
validators:_this.props.validators},_this.





















getErrorMessage=function(){var
errorMessages=_this.state.errorMessages;
var type=typeof errorMessages;

if(type==='string'){
return errorMessages;
}else if(type==='object'){
if(_this.invalid.length>0){
return errorMessages[_this.invalid[0]];
}
}

console.log('unknown errorMessages type',errorMessages);
return true;
},_this.

instantValidate=true,_this.
invalid=[],_this.

configure=function(){
_this.context.form.attachToForm(_this);
_this.instantValidate=_this.context.form.instantValidate;
_this.debounceTime=_this.context.form.debounceTime;
_this.validateDebounced=(0,_utils.debounce)(_this.validate,_this.debounceTime);
},_this.

validate=function(value){var includeRequired=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var dryRun=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;
var validations=Promise.all(
_this.state.validators.map(function(validator){return _Form2.default.getValidator(validator,value,includeRequired);}));


validations.then(function(results){
_this.invalid=[];
var valid=true;
results.forEach(function(result,key){
if(!result){
valid=false;
_this.invalid.push(key);
}
});
if(!dryRun){
_this.setState({isValid:valid},function(){
_this.props.validatorListener(_this.state.isValid);
});
}
});
},_this.

isValid=function(){return _this.state.isValid;},_this.

makeInvalid=function(){
_this.setState({isValid:false});
},_this.

makeValid=function(){
_this.setState({isValid:true});
},_temp),_possibleConstructorReturn(_this,_ret);}_createClass(Input,[{key:'componentDidMount',value:function componentDidMount(){this.configure();}},{key:'shouldComponentUpdate',value:function shouldComponentUpdate(nextProps,nextState){return this.state!==nextState||this.props!==nextProps;}},{key:'componentDidUpdate',value:function componentDidUpdate(prevProps,prevState){if(this.instantValidate&&this.props.value!==prevState.value){this.validateDebounced(this.props.value,this.props.withRequiredValidator);}}},{key:'componentWillUnmount',value:function componentWillUnmount(){this.context.form.detachFromForm(this);this.validateDebounced.cancel();}}],[{key:'getDerivedStateFromProps',value:function getDerivedStateFromProps(nextProps,prevState){if(nextProps.validators&&nextProps.errorMessages&&(prevState.validators!==nextProps.validators||prevState.errorMessages!==nextProps.errorMessages)){return{value:nextProps.value,validators:nextProps.validators,errorMessages:nextProps.errorMessages};}return{value:nextProps.value};}}]);return Input;}(_react2.default.Component);


Input.contextTypes={
form:_propTypes2.default.object};


Input.propTypes={
errorStyle:_propTypes2.default.shape({
container:_propTypes2.default.shape({
top:_propTypes2.default.number,
left:_propTypes2.default.number,
position:_propTypes2.default.string}),

text:_propTypes2.default.shape({}),
underlineValidColor:_propTypes2.default.string,
underlineInvalidColor:_propTypes2.default.string}),

errorMessages:_propTypes2.default.oneOfType([
_propTypes2.default.array,
_propTypes2.default.string]),

validators:_propTypes2.default.array,
value:_propTypes2.default.any,
validatorListener:_propTypes2.default.func,
withRequiredValidator:_propTypes2.default.bool};


Input.defaultProps={
errorStyle:{
container:{
top:0,
left:0,
position:'absolute'},

text:{
color:'red'},

underlineValidColor:'gray',
underlineInvalidColor:'red'},

errorMessages:'error',
validators:[],
validatorListener:function validatorListener(){}};


(0,_reactLifecyclesCompat.polyfill)(Input);exports.default=

Input;